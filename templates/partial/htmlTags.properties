app.link=<a routerLink="/${classURL}" class="list-group-item list-group-item-action bg-light">${classNameDisplay}</a>
attribute.th=<th>{{ '${attributeName}' | titlecase }}</th>
attribute.td=<td>{{${classVariableName}.${attributeName}}}</td>
attribute.td.enum=<td>{{${classVariableName}.${attributeName} | titlecase}}</td>
attribute.validator.get= get ${attributeName}() {\nreturn this.${classVariableName}DetailForm.get('${attributeName}');\n}
attribute.form.input.text=<div class="form-group">\n<label>${attributeDisplayName}</label><input formControlName="${attributeName}" [class.is-invalid]="${attributeName}.invalid && ${attributeName}.touched"  type="text"  name="${attributeName}" id="${attributeName}" placeholder="${attributeName}"  class="form-control"  /><small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
attribute.form.input.date=<div class="form-group">\n<label>${attributeDisplayName}</label><input formControlName="${attributeName}" [class.is-invalid]="${attributeName}.invalid && ${attributeName}.touched"  type="text"  name="${attributeName}" id="${attributeName}" placeholder="${attributeName}"  class="form-control" bsDatepicker /><small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
attribute.form.input.time=<div class="form-group">\n<label>${attributeDisplayName}</label><input formControlName="${attributeName}" [class.is-invalid]="${attributeName}.invalid && ${attributeName}.touched"  type="text"  name="${attributeName}" id="${attributeName}" placeholder="${attributeName}"  class="form-control" bsTimepicker /><small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
attribute.form.input.dateTime=<div class="form-group">\n<label>${attributeDisplayName}</label><input formControlName="${attributeName}" [class.is-invalid]="${attributeName}.invalid && ${attributeName}.touched"  type="text"  name="${attributeName}" id="${attributeName}" placeholder="${attributeName}"  class="form-control"  /><small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
attribute.form.input.number=<div class="form-group">\n<label>${attributeDisplayName}</label><input formControlName="${attributeName}" [class.is-invalid]="${attributeName}.invalid && ${attributeName}.touched"  type="number"  name="${attributeName}" id="${attributeName}" placeholder="${attributeName}"  class="form-control"  /><small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
attribute.form.input.id=<input type="hidden" formControlName="${attributeName}" name="${attributeName}" id="${attributeName}" placeholder="${attributeName}"  class="hide"  />
attribute.form.input.password=<div class="form-group">\n<label>${attributeDisplayName}</label><input formControlName="${attributeName}" [class.is-invalid]="${attributeName}.invalid && ${attributeName}.touched"  type="password"  name="${attributeName}" id="${attributeName}" placeholder="${attributeDisplayName}"  class="form-control"  /><small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
attribute.form.input.textarea=<div class="form-group">\n<label>${attributeDisplayName}</label><textarea formControlName="${attributeName}" [class.is-invalid]="${attributeName}.invalid && ${attributeName}.touched"   name="${attributeName}" id="${attributeName}" placeholder="${attributeDisplayName}"  class="form-control" > </textarea><small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
attribute.form.input.select.multi=<div class="form-group">\n<label>${attributeDisplayName}</label><select formControlName="${attributeName}"  name="${attributeName}" id="${attributeName}"  multiple class="custom-select">\n  <option value="select" >Select a value</option>\n  </select> \n<small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
attribute.form.input.select.single=<div class="form-group">\n<label>${attributeDisplayName}</label><select formControlName="${attributeName}"  name="${attributeName}" id="${attributeName}"  class="custom-select">\n  <option value="select" >Select a value</option>\n  </select> \n<small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
attribute.form.input.select.enum=<div class="form-group">\n<label>${attributeDisplayName}</label><select formControlName="${attributeName}"  name="${attributeName}" id="${attributeName}"  class="custom-select">\n  <ng-container *ngFor="let item of ${enumVariableName}Keys()"> \n<option value="{{item}}">{{item | titlecase}}</option>\n </ng-container>  </select> \n<small class="text-danger" *ngIf="${attributeName}.invalid  && ${attributeName}.touched">${attributeError}</small>\n</div>
model.class.import=import { ${className}ListComponent } from './${classURL}/${classFileAngular}-list.component';\nimport {${className}Service} from './${classURL}/${classFileAngular}.service';\nimport { ${className}DetailComponent } from './${classURL}/${classFileAngular}-detail.component';\n
model.class.route={path: '${classURL}', component: ${className}ListComponent},\n{ path: '${classURL}/:id',  component: ${className}DetailComponent},
model.class.firstRoute={path: '', redirectTo: '/${classURL}', pathMatch: 'full'},{path: '${classURL}', component: ${className}ListComponent},\n{ path: '${classURL}/:id',  component: ${className}DetailComponent},
detail.class.enumCollection=private ${enumVariableName}Values = ${enumName};\n${enumVariableName}Keys(): Array<string> {\nconst ${enumVariableName}Keys = Object.keys(this.${enumVariableName}Values);\nreturn ${enumVariableName}Keys.slice(${enumVariableName}Keys.length / 2);}\n